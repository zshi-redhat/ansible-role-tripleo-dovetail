---
# tasks file for ansible-role-tripleo-dovetail

- name: Start docker service
  become: true
  systemd:
    name: docker
    state: started
    enabled: True

- name: make sure pre_config dir exist
  become: true
  file:
    path: "{{ working_dir }}/pre_config"
    state: directory
    mode: 0755

- name: Generate env file
  become: true
  command: cp -rn /home/stack/overcloudrc {{ working_dir }}/pre_config/{{ env_file }}

- name: Config OS_TENANT_NAME
  become: true
  lineinfile:
    dest: "{{ working_dir }}/pre_config/{{ env_file }}"
    regexp: "OS_TENANT_NAME="
    line: 'export OS_TENANT_NAME=admin'

- name: Config DOVETAIL_HOME
  become: true
  lineinfile:
    dest: "{{ working_dir }}/pre_config/{{ env_file }}"
    regexp: "DOVETAIL_HOME"
    line: 'export DOVETAIL_HOME={{ working_dir }}'

- name: Check if https is used
  shell: grep OS_AUTH_URL=https overcloudrc
  register: https_output

- name: Config INSECURE mode when https + no-cert
  become: true
  lineinfile:
    dest: "{{ working_dir }}/pre_config/{{ env_file }}"
    regexp: "OS_INSECURE"
    line: 'export OS_INSECURE=True'
  when: https_output.stdout != "" and not ca_cert

- name: Copy cacert file when https + cacert
  become: true
  command: cp -rn /home/stack/overcloud-cacert.pem {{ working_dir }}/pre_config/cacert.pem
  when: https_output.stdout != "" and ca_cert|bool

- name: Config OS_CACERT when https + cacert
  become: true
  lineinfile:
    dest: "{{ working_dir }}/pre_config/{{ env_file }}"
    regexp: "OS_CACERT"
    line: 'export OS_CACERT={{ working_dir }}/pre_config/cacert.pem'
  when: https_output.stdout != "" and ca_cert|bool

- name: Download cirros image to dovetail/pre_config
  become: true
  command: >
    curl -O {{ cirros_image_url }}
  args:
    chdir: "{{ working_dir }}/pre_config/"
  register: curl_result
  until: curl_result.rc not in [18, 56]
  retries: 5
  delay: 5

- when: testarea == 'ha' or testarea == 'HA'
  block:
    - name: Get Controller IP addresses
      shell: source /home/stack/stackrc; nova list --fields name,networks | \
                awk -F "=" '/control/ {print $2;}' | cut -d " " -f 1
      register: controller_ips

    - name: Create pod.yaml
      become: true
      template:
        src: pod.yaml.j2
        dest: "{{ working_dir }}/pre_config/pod.yaml"
        mode: 0755
